@page "/fetchdata"
@using SteadFastAssessment.Shared.Model
@inject HttpClient Http

<h1>Timesheet List</h1>

@if (AddFormActive)
{
    <Microsoft.AspNetCore.Components.Forms.EditForm Model="AddModel"
                                                    OnValidSubmit="AddFormValidSubmit">
        <InputText @bind-Value="AddModel.EmployeeName"></InputText>
        <InputDate @bind-Value="AddModel.Date"></InputDate>
        <InputNumber @bind-Value="AddModel.HoursWorked"></InputNumber>
        <button type="submit">Submit</button>
        <button type="button" @onclick="CancelAddForm">Cancel</button>
    </Microsoft.AspNetCore.Components.Forms.EditForm>
}
else
{
    <TimeSheetTable Data="timeSheets"></TimeSheetTable>
    <button type="button" @onclick="() => { AddFormActive = true; }">Add Sheet</button>
}

@code {
    private ITimeSheet[] timeSheets;

    protected override async Task OnInitializedAsync()
    {
        timeSheets = await Http.GetFromJsonAsync<TimeSheetModel[]>("TimeSheet");
    }

    private async Task AddFormValidSubmit()
    {
        var result = await Http.PostAsJsonAsync<TimeSheetModel>("TimeSheet", (TimeSheetModel)AddModel);
        CancelAddForm();
        //Get an updated list from server
        timeSheets = await Http.GetFromJsonAsync<TimeSheetModel[]>("TimeSheet");
    }

    private void CancelAddForm()
    {
        AddFormActive = false;
        //Clear fields for User Experience
        AddModel = new TimeSheetModel();
    }

    private bool AddFormActive { get; set; }

    private TimeSheetModel AddModel { get; set; } = new TimeSheetModel();
}
